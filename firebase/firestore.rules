rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    match /users/{userId} {
      allow read: if isSignedIn() && request.auth.uid == userId;
      allow write: if request.auth.uid == userId;
    }

    match /products/{productId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if request.auth.uid == resource.data.ownerId;
    }

    match /auctions/{auctionId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if false; // Updates handled via Cloud Functions to enforce anti-sniping.
      allow delete: if request.auth.token.admin == true;

      match /bids/{bidId} {
        allow create: if isSignedIn()
          && request.resource.data.amount >= resource.data.currentBid + resource.data.minIncrement;
        allow read: if true;
      }
    }

    match /deals/{dealId} {
      allow read: if true;
      allow write: if isSignedIn();
    }

    match /wanted/{wantedId} {
      allow read: if true;
      allow write: if isSignedIn() && request.auth.uid == request.resource.data.userId;
    }

    match /alerts/{userId}/priceAlerts/{alertId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }
  }
}
